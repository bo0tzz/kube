apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nextcloud
  name: nextcloud
  namespace: nextcloud
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      containers:
      - envFrom:
          - configMapRef:
              name: nc-config
          - secretRef:
              name: db-secret
          - configMapRef:
              name: db-config
        name: nc
        image: nextcloud:20
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /var/www/html
          name: html
      restartPolicy: Always
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: nextcloud-pvc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nextcloud-pvc
  namespace: nextcloud
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-storage"
spec:
  storageClassName: nfs-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nextcloud
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nextcloud
  namespace: nextcloud
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts: 
    - nc.bo0tzz.me
    secretName: nc-web-tls
  rules:
  - host: nc.bo0tzz.me
    http:
      paths:
      - path: /
        backend:
          serviceName: nextcloud
          servicePort: http